{"version":3,"sources":["assets/flight.jpg","assets/nonstop.png","assets/multiflight.png","actions/index.js","container/search-form/search-form.js","components/flight-search-info/flight-search-info.js","components/detail-label/detail-label.js","components/price-info/price-info.js","lib/utils.js","components/flight-info/flight-info.js","components/multi-flight-info/multi-flight-info.js","components/flights-grid/flights-grid.js","components/all-flights/all-flights.js","App.js","reducers/index.js","lib/flightManager.js","sagas/index.js","index.js"],"names":["module","exports","__webpack_require__","p","airportsList","isDate","date","Date","isNaN","ErrorLabel","props","React","createElement","style","color","message","mapDispatchToProps","findFlights","payload","type","connect","state","flights","origin","destination","isReturn","setFlightType","useState","status","setFormValid","isValid","invalidFields","Card","Body","Form","className","onSubmit","event","preventDefault","criteria","text","departureDate","target","dateOfDep","value","numOfPassengers","flightType","checked","returnDate","dateOfReturn","includes","Object","keys","length","Group","Check","inline","label","name","id","onChange","e","controlId","Typeahead","labelKey","options","placeholder","ref","Label","Control","required","as","Button","variant","FlightSearchInfo","src","flight","width","height","alt","concat","count","dateString","formattedDate","setDate","getDate","dayOfWeek","getDay","dayOfMonth","month","getMonth","day","getDayOfMonthWithSuffix","formatDateString","DetailLabel","mainText","subText","PriceInfo","amount","transformFlightDates","map","arrivalTimeStamp","arrivalTime","getTime","departureTimeStamp","departureTime","getTimeDifferece","timeDiff","timeInHrs","String","Math","floor","padStart","timeInMins","round","FlightLogo","nonStopFlightLogo","FlightInfo","flightNo","price","data","isMultiMode","MultiFlightLogo","multiFlightLogo","LayoverInfo","time","MultiFlightInfo","cumulativeFlight","totalFare","dayChange","showHideLabel","toggleLabel","href","onClick","index","Fragment","key","FlightsGrid","flightsCount","nonStopFlights","multiStopFlights","AllFlightsList","margin","alignSelf","display","FlightData","getFlights","routes","filters","useEffect","SearchForm","AllFlights","onwards","return","reducer","arguments","undefined","action","loading","json","paths","_ref","graph","from","to","path","linkedNodes","fn","flightCache","Map","JSON","stringify","cached","get","apply","this","set","connectedNodes","node","reduce","c","push","config","bind","explore","currNode","originalNode","linkedNode","hasEdgeBeenTraversedInPath","edge","a","result","slice","pop","_ref2","arr","i","indices","allIndices","some","findPaths","_ref3","flightData","finalPaths","filter","links","duplicate","keyName","hasOwnProperty","isSameDestination","startDate","lowerLayover","replace","checkLayoverCriteria","transformedPaths","forEach","parseInt","multiFlights","layovers","filterPaths","fetchFlights","fetch","then","response","put","console","log","error","listOfFlights","flightsWatcher","takeLatest","findFlightsWatcher","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","all","ReactDOM","render","Provider","App","document","getElementById"],"mappings":"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","file":"static/js/main.246ece87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flight.76c388a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nonstop.a8b2e228.png\";","module.exports = __webpack_public_path__ + \"static/media/multiflight.9f029423.png\";","export const getFlights = () => ({\n  type: 'GET_FLIGHTS',\n});\n\nexport const findFlights = (payload) => ({\n  type: 'GET_ROUTES',\n  payload\n});","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Typeahead } from 'react-bootstrap-typeahead'; \nimport { connect } from 'react-redux';\nimport './search-form.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { findFlights } from './../../actions';\n\nconst airportsList = [\n  'Pune (PNQ)',\n  'Mumbai (BOM)',\n  'Bengaluru (BLR)',\n  'Delhi (DEL)'\n];\n\nconst isDate = (date) => {\n  return (new Date(date) !== \"Invalid Date\") && !isNaN(new Date(date));\n}\n\nconst ErrorLabel = (props) => {\n  return (<label style={{color: 'red'}}>{props.message}</label>)\n}\n\nexport const SearchForm = (props) => {\n  let origin, destination;\n  const [isReturn, setFlightType] = useState(false);\n  const [status, setFormValid] = useState({ isValid: false });\n  \n  let invalidFields = {};\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const {flights} = props;\n    invalidFields = {};\n    const criteria = {\n      origin: origin.state.text,\n      destination: destination.state.text,\n      departureDate: event.target.dateOfDep.value,\n      numOfPassengers: event.target.numOfPassengers.value\n    }\n\n    if (event.target.flightType[1].checked ) {\n      criteria.returnDate = event.target.dateOfReturn.value;\n      if (!isDate(event.target.dateOfReturn.value)) {\n        invalidFields.returnDate = true;\n      }\n    }\n\n    if (!airportsList.includes(criteria.origin)) {\n      invalidFields.origin = true;\n    }\n    if (!airportsList.includes(criteria.destination) || criteria.origin === criteria.destination) {\n      invalidFields.destination = true;\n    }\n    if(!isDate(criteria.departureDate)) {\n      invalidFields.departureDate = true;\n    }\n    if(!isDate(criteria.departureDate)) {\n      invalidFields.departureDate = true;\n    }\n    if(Object.keys(invalidFields).length > 0) {\n      setFormValid({isValid: false, ...invalidFields});\n      return;\n    }\n    \n    setFormValid({isValid: true});\n    props.findFlights({flights, criteria});\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n      <Form className=\"search-form-container\" onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Check\n            inline\n            checked={!isReturn}\n            type=\"radio\"\n            label=\"One way\"\n            name=\"flightType\"\n            id=\"formHorizontalRadios1\"\n            onChange={(e)=>setFlightType(false)}\n          />\n          <Form.Check\n            inline\n            checked={isReturn}\n            type=\"radio\"\n            label=\"Return\"\n            name=\"flightType\"\n            id=\"formHorizontalRadios2\"\n            onChange={(e)=>setFlightType(true)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridOrigin\">\n          <Typeahead\n            id=\"originTypeahead\"\n            labelKey=\"origin\"\n            options={airportsList}\n            placeholder=\"Enter Origin\"\n            ref={(ref) => origin = ref}\n          />\n          {status.origin && <ErrorLabel message=\"Please enter a valid airport\" />}\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridDestination\">\n          <Typeahead\n            id=\"destinationTypeahead\"\n            labelKey=\"destination\"\n            options={airportsList}\n            placeholder=\"Enter Destination\"\n            ref={(ref) => destination = ref}\n          />\n          {status.destination && <ErrorLabel message=\"Please enter a valid airport but not same as origin\" />}\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridDateOfDep\">\n          <Form.Label>Departure Date</Form.Label>\n          <Form.Control type=\"date\" name=\"dateOfDep\" placeholder=\"yyyy-mm-dd\" required />\n          {status.departureDate && <ErrorLabel message=\"Please enter a valid departure date\"/>}\n        </Form.Group>\n\n        {isReturn && <Form.Group controlId=\"formGridDateOfReturn\">\n          <Form.Label>Return Date</Form.Label>\n          <Form.Control type=\"date\" name=\"dateOfReturn\"  placeholder=\"yyyy-mm-dd\" required />\n          {status.returnDate && <ErrorLabel message=\"Please enter a valid return date\"/>}\n        </Form.Group>}\n\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Control as=\"select\" name=\"numOfPassengers\" placeholder=\"Number of Passengers\">\n            <option>Number of Passengers</option>\n            <option>1</option>\n            <option>2</option>\n            <option>3</option>\n            <option>4</option>\n            <option>5</option>\n          </Form.Control>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Search\n        </Button>\n        </Form> \n      </Card.Body>\n    </Card>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  flights: state.flights\n})\n\nconst mapDispatchToProps = {\n  findFlights\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n\n","import React from 'react';\nimport './flight-search-info.css';\nimport flight from '../../assets/flight.jpg';\n\nexport const FlightSearchInfo = (props) => {\n  const { origin, destination, date } = props.criteria;\n\n  // Function to format the date\n  const formatDateString = (dateString) => {\n    const formattedDate = new Date(dateString);\n    formattedDate.setDate(formattedDate.getDate() + 1);\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const monthsOfYear = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n    const dayOfWeek = daysOfWeek[formattedDate.getDay()];\n    const dayOfMonth = formattedDate.getDate();\n    const month = monthsOfYear[formattedDate.getMonth()];\n\n    const getDayOfMonthWithSuffix = (day) => {\n      if (day > 3 && day < 21) return `${day}th`;\n      switch (day % 10) {\n        case 1: return `${day}st`;\n        case 2: return `${day}nd`;\n        case 3: return `${day}rd`;\n        default: return `${day}th`;\n      }\n    };\n\n    return `${dayOfWeek}, ${getDayOfMonthWithSuffix(dayOfMonth)} ${month}`;\n  };\n\n  return (\n    <section className=\"flight-search-info\">\n      <div>\n        <img src={flight} width=\"40px\" height=\"40px\" alt=\"Flight\" />\n        <h3>{`${origin} to ${destination}`}</h3>\n      </div>\n      <p>{props.count} flights found &nbsp; {formatDateString(date)}</p>\n    </section>\n  );\n};\n","import React from 'react';\nimport './detail-label.css';\n\nexport const DetailLabel = (props) => {\n  return (\n    <div className=\"detail-label\">\n      <h4>{props.mainText}</h4>\n      <p>{props.subText}</p>\n    </div>\n  )\n}","import React from 'react';\nimport './price-info.css';\n\nexport const PriceInfo = (props) => {\n  return (\n    <div className=\"price-info\">\n      <p>&#x20b9; {props.amount}</p>\n    </div>\n  );\n}","export const transformFlightDates = (flights) => {\r\n  return flights.map(flight => {\r\n    return {\r\n      ...flight,\r\n      arrivalTimeStamp: new Date(`${flight.date} ${flight.arrivalTime}`).getTime(),\r\n      departureTimeStamp: new Date(`${flight.date} ${flight.departureTime}`).getTime()\r\n    }\r\n  })\r\n};\r\n\r\nexport const getTimeDifferece = (timeDiff) => {\r\n  const timeInHrs = String(Math.floor((timeDiff) / 3600000)).padStart(2, '0');\r\n  const timeInMins = String(Math.round(((timeDiff % 86400000) % 3600000) / 60000)).padStart(2, '0');\r\n  return `${timeInHrs}h ${timeInMins}m`;\r\n}\r\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { DetailLabel } from './../detail-label/detail-label';\nimport { PriceInfo } from './../price-info/price-info';\nimport nonStopFlightLogo from './../../assets/nonstop.png';\nimport { getTimeDifferece } from './../../lib/utils';\nimport './flight-info.css';\n\nconst FlightLogo = () => {\n  return <img src={nonStopFlightLogo} width=\"32\" height=\"32\" alt=\"Non-stop Flight\" />\n}\n\nexport const FlightInfo = (props) => {\n\n  const { name, flightNo, departureTime, origin, arrivalTime, destination, price, date  } = props.data;\n  const isMultiMode = props.isMultiMode;\n  const timeDiff = new Date(`${date} ${arrivalTime}`) - new Date(`${date} ${departureTime}`);\n\n  return (\n    <Card>\n      <section className={`Flight-info ${isMultiMode ? 'gray-background' : ''}`}>\n        <FlightLogo/>\n        <DetailLabel mainText={name} subText={flightNo} />\n        <DetailLabel mainText={departureTime} subText={origin} />\n        <DetailLabel mainText={arrivalTime} subText={destination} />\n        <DetailLabel mainText={getTimeDifferece(timeDiff)} subText={isMultiMode ? '' : 'Non stop'} />\n        {isMultiMode ? null : \n          <PriceInfo \n            amount={price} \n          />\n        }\n        {isMultiMode ? null : \n          <Button \n            variant={\"danger\"}\n          >\n            Book\n          </Button>\n        }\n      </section>\n    </Card>\n  )\n}\n\n","import React, { Fragment, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { DetailLabel } from './../detail-label/detail-label';\nimport { FlightInfo } from './../flight-info/flight-info';\nimport { PriceInfo } from './../price-info/price-info';\nimport { getTimeDifferece } from './../../lib/utils';\nimport multiFlightLogo from './../../assets/multiflight.png';\nimport './multi-flight-info.css';\nimport './../flight-info/flight-info.css';\n\nconst MultiFlightLogo = (props) => {\n  return <img src={multiFlightLogo} alt=\"multiple flights logo\" width=\"32\" height=\"32\" />\n}\n\nconst LayoverInfo = (props) => {\n  return (\n    <p className=\"layover-info\">\n      Layover of {props.time}\n    </p>\n  )  \n}\n\nexport const MultiFlightInfo = (props) => {\n  const { cumulativeFlight: { departureTime, origin, arrivalTime, destination, totalFare, arrivalTimeStamp, departureTimeStamp, dayChange }, flights } = props.data;\n  const [ showHideLabel, toggleLabel ] = useState('Show Details');\n  const timeDiff = arrivalTimeStamp - departureTimeStamp;\n  return (\n    <Card>\n      <section className=\"Flight-info\">\n        <MultiFlightLogo/>\n        <div className=\"detail-label\">\n          <h4>Multiple</h4>\n          <a href=\"#\" onClick={() => toggleLabel( showHideLabel === 'Show Details' ? 'Hide Details' : 'Show Details') }>\n            {showHideLabel}\n          </a>\n        </div>\n        <DetailLabel mainText={departureTime} subText={origin} />\n        <DetailLabel mainText={arrivalTime + (dayChange ? '(+1)': '')} subText={destination} />\n        <DetailLabel mainText={getTimeDifferece(timeDiff)} subText={'Total Duration'} />\n        <PriceInfo amount={totalFare} />\n        <Button variant=\"danger\">Book</Button>\n      </section>\n      { showHideLabel === 'Hide Details' && flights.map((flight, index) => {\n        const timeDiff = index < flights.length -1 ? flights[index+1].departureTimeStamp - flight.arrivalTimeStamp : null;\n        return (\n          <Fragment key={index}>\n            <FlightInfo data={flight} isMultiMode={true} />\n            {timeDiff && <LayoverInfo time={getTimeDifferece(timeDiff)} />}\n          </Fragment>  \n        );\n      })}\n    </Card>\n  )\n}\n","import React from 'react';\nimport './flight-grid.css';\nimport { FlightSearchInfo } from './../flight-search-info/flight-search-info';\nimport { FlightInfo } from './../flight-info/flight-info';\nimport { MultiFlightInfo } from './../multi-flight-info/multi-flight-info';\n\nconst FlightsGrid = (props) => {\n  const flights = props.flights || {};\n  const flightsCount = (flights.nonStopFlights && flights.nonStopFlights.length) + (flights.multiStopFlights && flights.multiStopFlights.length);\n\n  return (\n    <div className=\"flights-info-container\">\n      {props.criteria && <FlightSearchInfo criteria={props.criteria} count={flightsCount || 0} />}\n      {flights.nonStopFlights && flights.nonStopFlights.map(flight => <FlightInfo data={flight} />)}\n      {flights.multiStopFlights && flights.multiStopFlights.map(flight => <MultiFlightInfo data={flight} />)}\n    </div>\n  );\n}\n\nexport default FlightsGrid;\n\n","import React from 'react';\r\nimport FlightData from '../../data.json';\r\nimport { FlightInfo } from '../flight-info/flight-info';\r\nimport { MultiFlightInfo } from '../multi-flight-info/multi-flight-info';\r\nimport './all-flights.css';\r\n\r\nconst AllFlightsList = () => {\r\n  return (\r\n    <div>\r\n      <h2 style={{margin: '40px', alignSelf: 'flex-start', display:'flex'}}>\r\n        Available Flights\r\n      </h2>\r\n      {FlightData.map((flight, index) => (\r\n        <div key={index} className=\"list-flights\">\r\n          {flight.flights ? (\r\n            <MultiFlightInfo data={flight} />\r\n          ) : (\r\n            <FlightInfo data={flight} />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllFlightsList;","import React, { useEffect } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport SearchForm from './container/search-form/search-form';\nimport FlightsGrid from './components/flights-grid/flights-grid';\nimport { getFlights } from './actions';\nimport AllFlights from './components/all-flights/all-flights';\n\nfunction App(props) {\n  const { getFlights, flights, routes } = props;\n\n  useEffect(() => {\n    getFlights();\n  }, [getFlights]);\n\n  const { origin, destination, departureDate, returnDate } = props.filters || {};\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Flight Search App</h2>\n      </header>\n      <section className=\"Main-container\">\n        <aside className=\"Search-section\">\n          <SearchForm/>\n        </aside>\n        <section className=\"Results-section\">\n          {!props.routes && (\n            <div style={{width: '1080px'}}>\n              <AllFlights/>\n            </div>\n          )}\n          {routes && routes.onwards && (\n            <FlightsGrid \n              flights={routes.onwards} \n              criteria={{origin, destination, date: departureDate}}\n            />\n          )}\n          {routes && routes.return && (\n            <FlightsGrid \n              flights={routes.return}\n              criteria={{origin: destination, destination: origin, date: returnDate}}\n            />\n          )}\n        </section>\n      </section>   \n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  flights: state.flights,\n  routes: state.routes,\n  filters: state.filters\n})\n\nconst mapDispatchToProps = {\n  getFlights\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_FLIGHTS':\n    case 'GET_FILTERS':\n    case 'GET_ROUTES':\n      return { ...state, loading: true };\n    case 'GET_FLIGHTS_SUCCESS':\n      return { ...state, flights: action.json, loading: false };\n    case 'GET_FILTERS_SUCCESS':\n      return { ...state, filters: action.json, loading: false }; \n    case 'GET_ROUTES_SUCCESS':\n      return { ...state, routes: action.json, loading: false };       \n    default:\n      return state;\n   }\n};\n\nexport default reducer;","import flightData from './../data.json';\nimport { transformFlightDates } from './utils';\n\n//Using a graph algorithm to recursively explore all the connected nodes and find all connected flight paths\nfunction paths({ graph = [], from, to, date }, path = []) {\n  const linkedNodes = connectedNodes(nodes.bind(null, graph));\n  return explore(from, to);\n\n  function explore(currNode, to, paths = [], originalNode) {\n    path.push(originalNode || currNode);\n    for (let linkedNode of linkedNodes(currNode)) {\n      if (linkedNode.destination === to) {\n        let result = path.slice(); // copy values\n        result.push({ ...linkedNode });\n        paths.push(result);\n        continue;\n      }\n      // do not traverse paths already explored\n      if (!hasEdgeBeenTraversedInPath({\n        edge: {\n          from: currNode,\n          to: linkedNode.destination\n        },\n        path: path.map(a => a && a.destination ? a.destination : a)\n      })) {\n        explore(linkedNode.destination, to, paths, linkedNode);\n      }\n    }\n    path.pop(); // sub-graph fully explored \n\n    return paths;\n  }\n}\n\n/** \n* Get all nodes linked \n* to from `node`.\n*/\nfunction nodes(graph, node) {\n  const list = graph.reduce((p, c) => {\n    (c.origin === node) && p.push({ destination: c.destination, config: { ...c } });\n    return p;\n  }, []);\n  return list;\n}\n\n/**\n* Has an edge been followed \n* in the given path?\n*/\nfunction hasEdgeBeenTraversedInPath({ edge, path }) {\n  var indices = allIndices(path, edge.from);\n  return indices.some(i => path[i + 1] === edge.to);\n}\n\n/**\n* Utility to get all indices of \n* values matching `val` in `arr`.\n*/\nfunction allIndices(arr, value) {\n  var indices = [],\n    i;\n  for (i = 0; i < arr.length; i++) {\n    if (arr[i] === value) {\n      indices.push(i);\n    }\n  }\n  return indices;\n}\n\n/**\n* Avoids recalculating flight route \n* nodes.\n*/\nfunction connectedNodes(fn) {\n  const flightCache = new Map();\n  return function () {\n    var key = JSON.stringify(arguments);\n    var cached = flightCache.get(key);\n    if (cached) {\n      return cached;\n    }\n    cached = fn.apply(this, arguments)\n    flightCache.set(key, cached);\n    return cached;\n  };\n}\n\nfunction filterPaths(paths, date, numOfPassengers) {\n\n  const list = paths.filter(path => {\n    return isSameDestination(path);\n  });\n\n  const finalPaths = list.filter(path => {\n    return checkLayoverCriteria(path, date);\n  });\n\n  const transformedPaths = {\n    nonStopFlights: [],\n    multiStopFlights: [],\n  }\n\n  finalPaths.forEach((path, index) => {\n    if (path.length === 2) {\n      transformedPaths.nonStopFlights.push({\n        ...path[1].config,\n        price: path[1].config.price * (parseInt(numOfPassengers) || 1)\n      })\n    }\n    else {\n      let totalFare = 0, multiFlights = [], layovers = path.length - 1;\n      for (let i = 1; i < path.length; i++) {\n        multiFlights.push({ ...path[i].config });\n        totalFare += path[i].config.price;\n      }\n\n      transformedPaths.multiStopFlights.push({\n        cumulativeFlight: {\n          origin: path[0],\n          destination: path[layovers].destination,\n          date: path[1].config.date,\n          departureTime: path[1].config.departureTime,\n          arrivalTime: path[layovers].config.arrivalTime,\n          arrivalTimeStamp: path[layovers].config.arrivalTimeStamp,\n          departureTimeStamp: path[1].config.departureTimeStamp,\n          dayChange: path[1].config.date !== path[layovers].config.date,\n          totalFare: totalFare * (parseInt(numOfPassengers) || 1)\n        },\n        flights: multiFlights\n      })\n    }\n\n    return transformedPaths;\n  });\n\n  return transformedPaths;\n}\n\nfunction checkLayoverCriteria(path, startDate) {\n  let lowerLayover = false;\n\n  if (path.length > 1 && (path[1].config.date !== startDate.replace(/-/g, '/'))) {\n    return false;\n  }\n\n  for (let i = 0; i < path.length - 1; i++) {\n    if (typeof path[i] === \"object\" && typeof path[i + 1] === \"object\" && path[i + 1].config.departureTimeStamp - path[i].config.arrivalTimeStamp <= 1800000) {\n      lowerLayover = true;\n      break;\n    }\n  }\n\n  return !lowerLayover;\n}\n\nfunction isSameDestination(links) {\n  let duplicate = false;\n  let keys = {};\n  for (let i = 0; i < links.length; i++) {\n    const keyName = links[i] && links[i].destination ? links[i].destination : links[i];\n    if (keys.hasOwnProperty(keyName)) {\n      duplicate = true;\n      break;\n    }\n    keys[keyName] = links[i]\n  }\n  return !duplicate;\n}\n\nexport function findPaths({ flights = transformFlightDates(flightData), criteria = { origin: 'Bengaluru (BLR)', destination: 'Delhi (DEL)' } }) {\n  return filterPaths(paths({\n    graph: flights,\n    from: criteria.origin,\n    to: criteria.destination,\n  }), criteria.date, criteria.numOfPassengers)\n}\n\n","import { put, takeLatest, all } from 'redux-saga/effects';\nimport { findPaths } from './../lib/flightManager';\nimport { transformFlightDates } from './../lib/utils';\n\nfunction* fetchFlights() {\n  try {\n    const json = yield fetch('https://my-json-server.typicode.com/siddhishah222/flightdata')\n      .then(response => response.json());\n    yield put({ type: \"GET_FLIGHTS_SUCCESS\", json: transformFlightDates(json) });\n  } catch (e) {\n    console.log('error', e);\n    yield put({ type: \"GET_FLIGHTS_FAIL\", error: e });\n  }\n\n}\n\nfunction* findFlights(payload) {\n  try {\n    yield put({ type: \"GET_FILTERS_SUCCESS\", json: payload.payload.criteria });\n    \n    const { flights, criteria: { returnDate, origin, destination, departureDate, numOfPassengers } } = payload.payload;\n    const listOfFlights = {};\n    \n    if (returnDate) {\n      listOfFlights.return = findPaths({ flights, criteria: { origin: destination, destination: origin, date: returnDate, numOfPassengers } })\n    }\n\n    listOfFlights.onwards = findPaths({ flights, criteria: { origin, destination, date: departureDate, numOfPassengers } });\n    \n    yield put({ type: \"GET_ROUTES_SUCCESS\", json: listOfFlights });\n  } catch (e) {\n    console.log('error', e);\n    yield put({ type: \"GET_ROUTES_FAIL\", error: e });\n  }\n\n}\n\nfunction* flightsWatcher() {\n  yield takeLatest('GET_FLIGHTS', fetchFlights)\n}\n\nfunction* findFlightsWatcher() {\n  yield takeLatest('GET_ROUTES', findFlights)\n}\n\nexport default function* rootSaga() {\n  yield all([\n    flightsWatcher(),\n    findFlightsWatcher()\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n   reducer,\n   applyMiddleware(sagaMiddleware),\n);\nsagaMiddleware.run(rootSaga);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}